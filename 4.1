const readline = require('readline');

// In-memory employee list
let employees = [];
let nextId = 1;

// Create readline interface for CLI
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// Display menu
function showMenu() {
    console.log('\n=== Employee Management System ===');
    console.log('1. Add Employee');
    console.log('2. View Employees');
    console.log('3. Delete Employee');
    console.log('4. Exit');
    rl.question('Select an option (1-4): ', handleMenu);
}

// Handle user choice
function handleMenu(choice) {
    switch (choice.trim()) {
        case '1':
            addEmployee();
            break;
        case '2':
            viewEmployees();
            break;
        case '3':
            deleteEmployee();
            break;
        case '4':
            console.log('Exiting... Goodbye!');
            rl.close();
            break;
        default:
            console.log('Invalid choice. Please enter 1-4.');
            showMenu();
    }
}

// Add new employee
function addEmployee() {
    rl.question('Enter employee name: ', (name) => {
        if (!name.trim()) {
            console.log('Name cannot be empty.');
            return showMenu();
        }

        const newEmp = {
            id: nextId++,
            name: name.trim()
        };

        employees.push(newEmp);
        console.log(`Employee added: ${newEmp.name} (ID: ${newEmp.id})`);
        showMenu();
    });
}

// View all employees
function viewEmployees() {
    if (employees.length === 0) {
        console.log('No employees found.');
    } else {
        console.log('\n--- Employee List ---');
        employees.forEach(emp => {
            console.log(`ID: ${emp.id}, Name: ${emp.name}`);
        });
    }
    showMenu();
}

// Delete employee by ID
function deleteEmployee() {
    if (employees.length === 0) {
        console.log('No employees to delete.');
        return showMenu();
    }

    rl.question('Enter Employee ID to delete: ', (idInput) => {
        const id = parseInt(idInput);
        const index = employees.findIndex(emp => emp.id === id);

        if (index === -1) {
            console.log('Employee not found.');
        } else {
            const removed = employees.splice(index, 1)[0];
            console.log(`Deleted employee: ${removed.name} (ID: ${removed.id})`);
        }

        showMenu();
    });
}

// Start the app
showMenu();
