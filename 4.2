const express = require('express');
const app = express();
const cardRoutes = require('./routes/cards');

app.use(express.json());
app.use('/api/cards', cardRoutes);

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Card Collection API running on port ${PORT}`);
});
// routes/cards.js
const express = require('express');
const router = express.Router();

// In-memory card storage
let cards = [];
let nextId = 1;

// GET /api/cards - Fetch all cards
router.get('/', (req, res) => {
    res.json(cards);
});

// GET /api/cards/:id - Get a card by ID
router.get('/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const card = cards.find(c => c.id === id);

    if (!card) {
        return res.status(404).json({ error: 'Card not found' });
    }

    res.json(card);
});

// POST /api/cards - Add a new card
router.post('/', (req, res) => {
    const { suit, rank } = req.body;

    if (!suit || !rank) {
        return res.status(400).json({ error: 'Suit and rank are required' });
    }

    const newCard = {
        id: nextId++,
        suit,
        rank
    };

